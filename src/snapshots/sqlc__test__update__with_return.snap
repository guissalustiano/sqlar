---
source: src/test.rs
expression: rs
---
pub struct UpdateUserParams {
    pub eq_film_id: i32,
    pub set_title: String,
}
pub struct UpdateUserRows {
    pub film_id: i32,
    pub title: String,
}
pub async fn update_user(
    c: &impl tokio_postgres::GenericClient,
    p: UpdateUserParams,
) -> Result<Vec<UpdateUserRows>, tokio_postgres::Error> {
    c.query(
            "UPDATE films SET title = $2 WHERE film_id = $1 RETURNING film_id, title",
            &[&p.eq_film_id, &p.set_title],
        )
        .await
        .map(|rs| {
            rs.into_iter()
                .map(|r| UpdateUserRows {
                    film_id: r.get(0),
                    title: r.get(1),
                })
                .collect()
        })
}
